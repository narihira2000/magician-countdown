{"version":3,"sources":["image/halloween_nekomajo.png","image/bg_uchu_space.jpg","App.js","reportWebVitals.js","index.js"],"names":["Copyright","Typography","variant","align","style","color","Link","marginRight","href","useStyles","makeStyles","theme","paper","objectPosition","display","flexDirection","alignItems","justifyContent","avatar","margin","spacing","backgroundColor","palette","secondary","main","form","width","marginTop","submit","background","backgroundImage","imgBackground","backgroundPosition","backgroundSize","backgroundRepeat","height","root","borderColor","amber","borderWidth","createTheme","type","primary","App","classes","history","useHistory","search","useLocation","date","queryString","parse","React","useState","isCopiedShow","setIsCopiedShow","Date","birthday","setStartDate","isDateExist","isDateValid","test","useEffect","setTimeout","className","Container","component","maxWidth","CssBaseline","ThemeProvider","src","imgMagician","alt","parseInt","split","renderer","days","hours","minutes","seconds","completed","textAlign","yearDisplay","Math","floor","monthDisplay","dayDisplay","console","log","noWrap","Grid","container","item","Button","onClick","replace","startIcon","ChevronLeft","ClickAwayListener","onClickAway","Tooltip","PopperProps","disablePortal","open","disableFocusListener","disableHoverListener","disableTouchListener","title","arrow","text","window","location","Share","disableElevation","disabled","noValidate","utils","DateFnsUtils","locale","zhTW","DatePicker","inputVariant","format","id","label","required","value","views","onChange","allowKeyboardControl","autoOk","disableFuture","push","getFullYear","toString","getMonth","getDate","fullWidth","Box","mt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","path","document","getElementById"],"mappings":"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","file":"static/js/main.a87abad3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/halloween_nekomajo.64d719d2.png\";","export default __webpack_public_path__ + \"static/media/bg_uchu_space.22d5c20e.jpg\";","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { createTheme, makeStyles, ThemeProvider } from '@material-ui/core/styles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Container from '@material-ui/core/Container';\r\nimport { DatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport 'date-fns';\r\nimport imgMagician from './image/halloween_nekomajo.png';\r\nimport imgBackground from './image/bg_uchu_space.jpg';\r\nimport { useLocation } from 'react-router';\r\nimport { useHistory, Link as RouteLink } from 'react-router-dom';\r\nimport queryString from 'query-string';\r\nimport Countdown from 'react-countdown';\r\nimport { ArrowLeft, ChevronLeft, Share } from '@material-ui/icons';\r\nimport CopyToClipboard from 'react-copy-to-clipboard';\r\nimport { amber, lime, purple } from '@material-ui/core/colors';\r\nimport { borderRadius } from '@material-ui/system';\r\nimport GitHubButton from 'react-github-btn';\r\nimport { zhTW } from 'date-fns/locale';\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" align=\"center\" style={{ color: '#fff' }} >\r\n            {'Copyright Â© '}\r\n            <Link style={{ marginRight: 5 }} color=\"inherit\" href=\"https://github.com/narihira2000\">\r\n                narihira2000\r\n            </Link>\r\n            <GitHubButton href=\"https://github.com/narihira2000/magician-countdown\" aria-label=\"Star narihira2000/magician-countdown on GitHub\">Star</GitHubButton>\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        // marginTop: theme.spacing(15),\r\n        objectPosition: \"50%\",\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent:\"center\",\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    background: {\r\n        backgroundImage: `url(${imgBackground})`,\r\n        backgroundPosition: 'center',\r\n        backgroundSize: 'cover',\r\n        backgroundRepeat: 'no-repeat',\r\n        width: '100%',\r\n        height: '100vh'\r\n    },\r\n    root: {\r\n        '& .MuiOutlinedInput-root': {\r\n            '& fieldset': {\r\n                borderColor: amber[500],\r\n                borderWidth: 2\r\n            },\r\n            '&:hover fieldset': {\r\n                borderColor: amber[700],\r\n                borderWidth: 2\r\n            },\r\n        },\r\n        '& .MuiLabel-root': {\r\n            color: \"#fff\"\r\n        },\r\n        width: \"100%\",\r\n    }\r\n}));\r\n\r\nconst theme = createTheme({\r\n    palette: {\r\n        type: \"dark\",\r\n        primary: amber,\r\n    },\r\n});\r\n\r\nexport default function App() {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const { search } = useLocation();\r\n    const { date } = queryString.parse(search);\r\n\r\n    const [isCopiedShow, setIsCopiedShow] = React.useState(false);\r\n\r\n    const [birthday, setStartDate] = React.useState(new Date());\r\n    const isDateExist = () => {\r\n        return typeof date !== \"undefined\";\r\n    }\r\n    const isDateValid = () => {\r\n        return /^\\d{4}\\-(0?[1-9]|1[012])\\-(0?[1-9]|[12][0-9]|3[01])$/.test(date);\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        history.push(\"/?date=\" + birthday.getFullYear().toString() + \"-\" + (birthday.getMonth() + 1).toString() + \"-\" + birthday.getDate().toString());\r\n    }\r\n\r\n    const renderer = ({ days, hours, minutes, seconds, completed }) => {\r\n        if (completed) {\r\n            return (\r\n                <Typography component=\"h1\" variant=\"h5\" style={{ textAlign: \"center\", color: \"#fff\" }}>\r\n                    æ­åä½ å·²æçºé­æ³å¸«!!\r\n                </Typography>\r\n            )\r\n        }\r\n        else {\r\n            let yearDisplay = Math.floor(days / 365);\r\n            let monthDisplay = Math.floor(days % 365 / 30);\r\n            let dayDisplay = Math.floor(days % 365 % 30);\r\n            console.log(days);\r\n            return (\r\n                <Typography noWrap component=\"h1\" variant=\"h5\" style={{ textAlign: \"center\", color: \"#fff\" }}>\r\n                    è·é¢æçºé­æ³å¸«éæ<br></br>\r\n                    {yearDisplay} å¹´ {monthDisplay} åæ {dayDisplay} å¤© {hours} å°æ {minutes} å {seconds} ç§\r\n                </Typography>\r\n            )\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if (isCopiedShow) {\r\n            setTimeout(() => {\r\n                setIsCopiedShow(false);\r\n            }, 2000);\r\n        }\r\n    }, [isCopiedShow]);\r\n\r\n\r\n    return (\r\n        <div className={classes.background}>\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <CssBaseline />\r\n                <ThemeProvider theme={theme}>\r\n                    <div className={classes.paper}>\r\n                        <img src={imgMagician} alt=\"magician\" width=\"70%\" style={{ marginTop: 150 }} />\r\n                        <Typography component=\"h1\" variant=\"h5\" style={{ color: \"#fff\" }}>\r\n                            {isDateExist() && isDateValid() ?\r\n                                \"\"\r\n                                :\r\n                                \"é­æ³å¸«åæ¸è¨æå¨\"\r\n                            }\r\n                        </Typography>\r\n                        {isDateExist() && isDateValid() ?\r\n                            <>\r\n                                <Countdown\r\n                                    date={new Date(parseInt(date.split(\"-\")[0]) + 30, parseInt(date.split(\"-\")[1]) - 1, parseInt(date.split(\"-\")[2]))}\r\n                                    renderer={renderer}\r\n                                />\r\n                                <Grid container style={{ justifyContent: \"space-around\", marginTop: 15 }}>\r\n                                    <Grid item>\r\n                                        <Button\r\n                                            onClick={() => history.replace(\"/\")}\r\n                                            startIcon={<ChevronLeft />}\r\n                                            color=\"primary\"\r\n                                            variant=\"contained\"\r\n                                        >\r\n                                            éæ°è¼¸å¥çæ¥\r\n                                        </Button>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <ClickAwayListener onClickAway={() => setIsCopiedShow(false)}>\r\n                                            <div>\r\n                                                <Tooltip\r\n                                                    PopperProps={{ disablePortal: true }}\r\n                                                    open={isCopiedShow}\r\n                                                    disableFocusListener\r\n                                                    disableHoverListener\r\n                                                    disableTouchListener\r\n                                                    title=\"å·²è¤è£½!\"\r\n                                                    arrow\r\n                                                >\r\n                                                    <CopyToClipboard text={window.location.href}>\r\n                                                        <Button\r\n                                                            startIcon={<Share />}\r\n                                                            onClick={() => setIsCopiedShow(true)}\r\n                                                            disableElevation\r\n                                                            variant=\"contained\"\r\n                                                            color=\"primary\"\r\n                                                            disabled={isCopiedShow}\r\n                                                        >\r\n                                                            åäº«çµæ\r\n                                                        </Button>\r\n                                                    </CopyToClipboard>\r\n                                                </Tooltip>\r\n                                            </div>\r\n                                        </ClickAwayListener>\r\n\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </>\r\n                            :\r\n                            <form className={classes.form} noValidate>\r\n                                <MuiPickersUtilsProvider utils={DateFnsUtils} locale={zhTW} >\r\n                                    <DatePicker\r\n                                        className={classes.root}\r\n                                        variant=\"inline\"\r\n                                        inputVariant=\"outlined\"\r\n                                        format=\"yyyy/MM/dd\"\r\n                                        margin=\"normal\"\r\n                                        id=\"date\"\r\n                                        label=\"ä½ ççæ¥\"\r\n                                        required\r\n                                        value={birthday}\r\n                                        views={[\"year\", \"month\", \"date\"]}\r\n                                        onChange={setStartDate}\r\n                                        allowKeyboardControl\r\n                                        autoOk\r\n                                        disableFuture\r\n                                    />\r\n                                </MuiPickersUtilsProvider>\r\n                                <Button\r\n                                    onClick={() => handleSubmit()}\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    className={classes.submit}\r\n                                >\r\n                                    éåº\r\n                                </Button>\r\n                            </form>\r\n                        }\r\n                    </div >\r\n                    <Box mt={5}>\r\n                        <Copyright />\r\n                    </Box>\r\n                </ThemeProvider>\r\n            </Container >\r\n        </div>\r\n    );\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nReactDOM.render(\n  <Router>\n    <Switch>\n      <Route path=\"/\">\n        <App />\n      </Route>\n    </Switch>\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}